{
  "openapi": "3.0.1",
  "info": {
    "title": "TechLibrary.Api",
    "version": "1.0"
  },
  "paths": {
    "/Books/Filter": {
      "get": {
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBooksJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBooksJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBooksJson"
                }
              }
            }
          }
        }
      }
    },
    "/Checkouts/{bookId}": {
      "post": {
        "tags": [
          "Checkouts"
        ],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLoginJson"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLoginJson"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLoginJson"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorMessagesJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorMessagesJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorMessagesJson"
                }
              }
            }
          }
        }
      }
    },
    "/Users": {
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUserJson"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUserJson"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUserJson"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorMessagesJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorMessagesJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorMessagesJson"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RequestLoginJson": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestUserJson": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseBookJson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseBooksJson": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/ResponsePaginationJson"
          },
          "books": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseBookJson"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseErrorMessagesJson": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponsePaginationJson": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ResponseRegisteredUserJson": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.\r\n                      Enter 'Bearer' [space] and then your token in the text input below;\r\n                      Example: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}